{"version":3,"sources":["components/header.js","config.js","components/layout.js","state/reducerHelpers.js","state/actions.js","state/actionTypes.js","types/feedTag.js","components/FeedItem/author.js","components/FeedItem/publishDate.js","components/FeedItem/feedItem.js","types/feedItem.js","components/FeedItem/index.js","components/feedTitle.js","components/feedList.js","components/icon.js","components/feedTag.js","components/tagList.js","components/errorMessage.js","pages/home.js","services/localStorageSrv.js","state/initialState.js","services/rssFeedStorageSrv.js","state/reducer.js","state/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["wrapperStyle","background","marginBottom","padding","headerStyle","margin","color","textDecoration","textAlign","Header","_ref","siteTitle","react_default","a","createElement","style","config","title","Layout","children","header","rssParser","parseFeed","feedUrl","url","concat","parser","RSSParser","Promise","resolve","reject","parseURL","error","feed","message","toggleIsLoadingFeed","isLoading","type","selectRssFeed","rssFeed","addErrorMessgae","errorMessage","PropTypes","string","bool","number","func","authorStyle","display","fontWeight","Author","author","datePublishedStyle","fontSize","PublishDate","pubDate","Date","toLocaleDateString","titleStyle","isRequired","border","borderRight","borderLeft","borderTop","htmlContentStyle","FeedItem","props","link","content","href","FeedItem_author","publishDate","dangerouslySetInnerHTML","__html","defaultProps","FeedTitle","listStyle","borderRadius","width","position","noItemsMsgStyle","FeedList","items","Object","objectWithoutProperties","feedTitle","length","map","item","components_FeedItem","assign","key","Icon","name","size","spin","className","defaultName","nameStyle","marginRight","FeedTag","isSelected","id","onFeedDelete","onFeedClick","onFeedUpdate","_useState","useState","_useState2","slicedToArray","tagName","setTagName","_useState3","_useState4","isHovered","setIsHovered","_useState5","_useState6","isEditMode","setEditMode","useEffect","cursor","toggleEditMode","onMouseOver","onMouseLeave","Fragment","value","onChange","evt","target","icon","onClick","onDoubleClick","TagList","feedTags","handleDeleteFeed","handleSelectFeed","handleUpdateFeed","selectedFeed","ft","components_feedTag","label","text","HomePage","handleSelectRssFeedTag","handleNewRssFeed","handleGetRssFeed","isLoadingFeed","handleDeleteFeedTag","handleUpdateFeedTag","setFeedUrl","components_layout","tagList","tagId","components_errorMessage","placeholder","feedList","Connector","connect","dispatch","urlLink","then","feedTag","getTime","generateFeedTag","catch","addNewRssFeedDetails","selectFeedTag","selectRssFeedTag","handleErrorMsg","handleRemoveErrorMsg","deleteFeedTag","newName","updateFeedTag","setItem","localStorage","JSON","stringify","getItem","parse","initialState","reducer","state","arguments","undefined","action","selectedIndex","findIndex","addErrorMessage","dismissErrorMessage","toggleIsLoading","remainingTags","filter","tag","objectSpread","deleteRssFeed","feedIndex","f","feeds","toConsumableArray","newFeedDetails","splice","updatedTags","newTag","push","addFeedTag","persistToStorage","store","next","feedId","currFeeds","updatedFeeds","_ref2","updateRssFeed","saveRssFeed","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15e6af9a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst wrapperStyle = {\n  background: 'rebeccapurple',\n  marginBottom: '1em',\n  padding: '1em .5em',\n};\n\nconst headerStyle = {\n  margin: 0,\n  color: 'white',\n  textDecoration: 'none',\n  textAlign: 'left',\n};\n\nconst Header = ({ siteTitle }) => (\n  <div style={wrapperStyle}>\n    <h1 style={headerStyle}>{siteTitle}</h1>\n  </div>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export default {\n  siteMetadata: {\n    title: 'RSS Dashboard',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport config from '../config';\n\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header siteTitle={config.siteMetadata.title} />\n    <div style={{ padding: '5em' }}>{children}</div>\n  </div>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Layout;\n","import RSSParser from 'rss-parser';\n\nlet rssParser = null;\n\n/**\n * Get RSS Parser\n * Caches the parser if it is not created already instead of creating new instance every time\n */\nfunction getRssParser() {\n  if (!rssParser) {\n    rssParser = new RSSParser();\n  }\n  return rssParser;\n}\n\n/**\n * Parse RSS feed from XML to JSON\n * @param {string} feedUrl - RSS feed url\n */\nexport const parseFeed = (feedUrl) => {\n  let url = feedUrl;\n  // Add proxy when working in development to resolve CORS issues\n  if (process.env.NODE_ENV !== 'development') {\n    const CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n    url = `${CORS_PROXY}${feedUrl}`;\n  }\n\n  const parser = getRssParser();\n  return new Promise((resolve, reject) => parser.parseURL(url, (error, feed) => {\n    if (error) {\n      const message = error.message || 'Unexpected error occurred';\n      return reject(message);\n    }\n    return resolve(feed);\n  }));\n};\n\n/**\n * Geberate unique value based on current date and time\n */\nexport function generateUniqueId() {\n  return new Date().getTime();\n}\n\n/**\n * Generate RSS Feed tag\n * @param {string} title - RSS Feed title\n * @param {string} urlLink - RSS Feed url\n */\nexport const generateFeedTag = (title, urlLink) => ({\n  id: generateUniqueId(),\n  url: urlLink,\n  name: title || urlLink,\n});\n","import {\n  SELECT_RSS_FEED_TAG,\n  ADD_ERROR_MESSAGE,\n  DISMISS_ERROR_MESSAGE,\n  SELECT_RSS_FEED,\n  TOGGLE_IS_LOADING_FEED,\n  DELETE_RSS_FEED,\n  UPDATE_FEED_TAG,\n  ADD_FEED_TAG,\n} from './actionTypes';\nimport { generateFeedTag, parseFeed } from './reducerHelpers';\n\nconst selectFeedTag = tagId => ({ type: SELECT_RSS_FEED_TAG, tagId });\n\nconst addFeedTag = ({ id, name, url }) => ({\n  type: ADD_FEED_TAG,\n  id,\n  name,\n  url,\n});\n\nconst toggleIsLoadingFeed = isLoading => ({\n  type: TOGGLE_IS_LOADING_FEED,\n  isLoading,\n});\n\nexport const selectRssFeed = rssFeed => ({ type: SELECT_RSS_FEED, rssFeed });\n\nexport const selectRssFeedTag = tagId => selectFeedTag(tagId);\n\nexport const addErrorMessgae = errorMessage => ({\n  type: ADD_ERROR_MESSAGE,\n  errorMessage,\n});\n\nexport const dismissErrorMessage = () => ({ type: DISMISS_ERROR_MESSAGE });\n\nexport const deleteFeedTag = tagId => ({\n  type: DELETE_RSS_FEED,\n  tagId,\n});\n\nexport const updateFeedTag = (tagId, newName) => ({\n  type: UPDATE_FEED_TAG,\n  tagId,\n  newName,\n});\n\nexport const fetchFeed = feedUrl => (dispatch) => {\n  dispatch(toggleIsLoadingFeed(true));\n  parseFeed(feedUrl)\n    .then((feed) => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(selectRssFeed(feed));\n    })\n    .catch((error) => {\n      dispatch(toggleIsLoadingFeed(false));\n      return dispatch(addErrorMessgae(error));\n    });\n};\n\nexport const addNewRssFeedDetails = urlLink => (dispatch) => {\n  dispatch(toggleIsLoadingFeed(true));\n  parseFeed(urlLink)\n    .then((feed) => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(selectRssFeed(feed));\n      const feedTag = generateFeedTag(feed.title, urlLink);\n      return dispatch(addFeedTag(feedTag));\n    })\n    .catch((error) => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(addErrorMessgae(error));\n    });\n};\n","export const SELECT_RSS_FEED = 'SELECT_RSS_FEED';\nexport const ADD_ERROR_MESSAGE = 'ADD_ERROR_MESSAGE';\nexport const DISMISS_ERROR_MESSAGE = 'DISMISS_ERROR_MESSAGE';\nexport const ADD_NEW_RSS_FEED_DETAILS = 'ADD_NEW_RSS_FEED_DETAILS';\nexport const SELECT_RSS_FEED_TAG = 'SELECT_RSS_FEED_TAG';\nexport const TOGGLE_IS_LOADING_FEED = 'TOGGLE_IS_LOADING_FEED';\nexport const DELETE_RSS_FEED = 'DELETE_RSS_FEED';\nexport const UPDATE_FEED_TAG = 'UPDATE_FEED_TAG';\nexport const ADD_FEED_TAG = 'ADD_FEED_TAG';\n","import PropTypes from 'prop-types';\n\nexport default {\n  url: PropTypes.string,\n  isSelected: PropTypes.bool,\n  name: PropTypes.string,\n  id: PropTypes.number,\n  onFeedDelete: PropTypes.func,\n  onFeedClick: PropTypes.func,\n  onFeedUpdate: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst authorStyle = {\n  margin: '0 .5em 0 0',\n  display: 'inline-block',\n  fontWeight: 'normal',\n};\n\nconst Author = ({ author }) => <h4 style={authorStyle}>{author}</h4>;\n\nAuthor.propTypes = {\n  author: PropTypes.string.isRequired,\n};\nexport default Author;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst datePublishedStyle = {\n  margin: 0,\n  display: 'inline-block',\n  fontSize: 12,\n};\n\nconst PublishDate = ({ pubDate }) => (\n  <p style={datePublishedStyle}>\n    {`${new Date(pubDate).toLocaleDateString()}`}\n  </p>\n);\n\nPublishDate.propTypes = {\n  pubDate: PropTypes.string.isRequired,\n};\nexport default PublishDate;\n","import React from 'react';\n\n// Components\nimport Author from './author';\nimport PublishDate from './publishDate';\n\n// Types\nimport FeedItemType from '../../types/feedItem';\n\nconst titleStyle = {\n  fontSize: 18,\n  fontWeight: 'bold',\n  textDecoration: 'none',\n  color: '#000000a6',\n};\n\nconst wrapperStyle = {\n  border: '1px solid #ebedf0',\n  borderRight: 0,\n  borderLeft: 0,\n  borderTop: 0,\n  padding: '15px',\n  color: '#000000a6',\n};\nconst htmlContentStyle = { margin: '1em 0', fontSize: 12 };\n\nconst authorStyle = {\n  margin: 0,\n};\n\nconst FeedItem = (props) => {\n  const {\n    link, title, pubDate, author, content,\n  } = props;\n  return (\n    <div style={wrapperStyle}>\n      <a style={titleStyle} href={link}>\n        {title}\n      </a>\n      <div style={authorStyle}>\n        {author && <Author author={author} />}\n        {pubDate && <PublishDate pubDate={pubDate} />}\n      </div>\n      <div style={htmlContentStyle} dangerouslySetInnerHTML={{ __html: content }} />\n    </div>\n  );\n};\n\nFeedItem.propTypes = FeedItemType;\n\nFeedItem.defaultProps = {\n  link: '',\n  content: '',\n  author: null,\n  pubDate: null,\n};\n\nexport default FeedItem;\n","import PropTypes from 'prop-types';\n\nexport default {\n  link: PropTypes.string,\n  content: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  pubDate: PropTypes.string,\n  author: PropTypes.string,\n};\n","import FeedItem from './feedItem';\n\nexport default FeedItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst titleStyle = {\n  border: '1px solid #ebedf0',\n  borderTop: 0,\n  borderRight: 0,\n  borderLeft: 0,\n};\n\nconst FeedTitle = ({ title }) => (\n  <div style={titleStyle}>\n    <h2>{title}</h2>\n  </div>\n);\n\nFeedTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default FeedTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedItem from './FeedItem';\nimport FeedTitle from './feedTitle';\nimport FeedItemType from '../types/feedItem';\n\nconst listStyle = {\n  border: '1px solid #ebedf0',\n  borderRadius: 2,\n  width: '100%',\n  position: 'relative',\n  padding: '20px',\n};\n\nconst noItemsMsgStyle = {};\nconst FeedList = ({ items, ...props }) => (\n  <div style={listStyle}>\n    <FeedTitle {...props} />\n    {items.length === 0 ? (\n      <div style={noItemsMsgStyle}>No Items found</div>\n    ) : (\n      items.map(item => <FeedItem key={item.title} {...item} />)\n    )}\n  </div>\n);\n\nFeedList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(FeedItemType)).isRequired,\n};\n\nexport default FeedList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = (props) => {\n  const {\n    name, size, spin, className,\n  } = props;\n  return (\n    <i\n      {...props}\n      className={`fa fa-${name} fa-${size} ${\n        spin ? 'fa-spin' : ''\n      } ${className}`}\n    />\n  );\n};\n\nIcon.defaultName = 'Icon';\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  spin: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  spin: false,\n  size: '1x',\n  className: '',\n};\n\nexport default Icon;\n","import React, { useState, useEffect } from 'react';\nimport Icon from './icon';\nimport FeedTagType from '../types/feedTag';\n\nconst nameStyle = {\n  marginRight: '.3em',\n};\n\nconst FeedTag = (props) => {\n  const {\n    url, isSelected, name, id, onFeedDelete, onFeedClick, onFeedUpdate,\n  } = props;\n\n  const [tagName, setTagName] = useState(name);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isEditMode, setEditMode] = useState(false);\n\n  useEffect(() => {\n    if (name !== tagName) {\n      setTagName(name);\n    }\n  }, [name]);\n\n  const wrapperStyle = {\n    border: '1px solid #6e2a9e',\n    display: 'inline-block',\n    padding: '5px',\n    borderRadius: '30px',\n    background: `${isSelected || isHovered ? '#9352ea' : '#6e2a9e'}`,\n    color: 'white',\n    fontSize: '14px',\n    cursor: 'pointer',\n    margin: '5px',\n  };\n\n  function toggleEditMode() {\n    setEditMode(!isEditMode);\n  }\n\n  function handleNameChange(evt) {\n    const {\n      target: { value },\n    } = evt;\n    setTagName(value);\n  }\n\n  function handleConfirmNameChange() {\n    if (tagName && tagName.length > 0 && tagName !== name) {\n      onFeedUpdate(id, tagName);\n    }\n    toggleEditMode();\n  }\n\n  return (\n    <div\n      style={wrapperStyle}\n      title={url}\n      id={id}\n      onMouseOver={() => {\n        setIsHovered(true);\n      }}\n      onMouseLeave={() => {\n        setIsHovered(false);\n      }}\n    >\n      {isEditMode && (\n        <React.Fragment>\n          <input type=\"text\" value={tagName} onChange={handleNameChange} style={nameStyle} />\n          <Icon name=\"check-circle\" onClick={handleConfirmNameChange} />\n        </React.Fragment>\n      )}\n      {!isEditMode && (\n        <div onDoubleClick={toggleEditMode}>\n          <span\n            type=\"button\"\n            onClick={() => {\n              onFeedClick(id);\n            }}\n            style={nameStyle}\n          >\n            {name}\n          </span>\n          <span\n            type=\"button\"\n            onClick={() => {\n              onFeedDelete(id);\n            }}\n          >\n            <Icon name=\"times-circle\" />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nFeedTag.propTypes = FeedTagType;\n\nFeedTag.defaultProps = {\n  url: null,\n  isSelected: false,\n  name: null,\n  id: null,\n  onFeedDelete: null,\n  onFeedClick: null,\n  onFeedUpdate: null,\n};\nexport default FeedTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport FeedTag from './feedTag';\n\nconst TagList = ({\n  feedTags,\n  handleDeleteFeed,\n  handleSelectFeed,\n  handleUpdateFeed,\n  selectedFeed,\n}) => (\n  <div>\n    {feedTags.map(ft => (\n      <FeedTag\n        {...ft}\n        isSelected={selectedFeed && selectedFeed.id === ft.id}\n        onFeedDelete={handleDeleteFeed}\n        onFeedClick={handleSelectFeed}\n        onFeedUpdate={handleUpdateFeed}\n      />\n    ))}\n  </div>\n);\n\nTagList.propTypes = {\n  feedTags: PropTypes.arrayOf(PropTypes.node).isRequired,\n  handleDeleteFeed: PropTypes.func,\n  handleSelectFeed: PropTypes.func,\n  handleUpdateFeed: PropTypes.func,\n  selectedFeed: PropTypes.shape({\n    id: PropTypes.number,\n  }),\n};\n\nTagList.defaultProps = {\n  handleDeleteFeed: null,\n  handleSelectFeed: null,\n  handleUpdateFeed: null,\n  selectedFeed: null,\n};\nexport default TagList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst wrapperStyle = {\n  color: 'red',\n};\n\nfunction errorMessage({ label, text }) {\n  return (\n    <p style={wrapperStyle}>\n      {label && (\n        <strong>\n          {label}\n          :&nbsp;\n        </strong>\n      )}\n      {text}\n    </p>\n  );\n}\n\nerrorMessage.propTypes = {\n  label: PropTypes.string,\n  text: PropTypes.string.isRequired,\n};\n\nerrorMessage.defaultProps = {\n  label: null,\n};\n\nexport default errorMessage;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Layout from '../components/layout';\nimport {\n  selectRssFeedTag,\n  addNewRssFeedDetails,\n  addErrorMessgae,\n  dismissErrorMessage,\n  deleteFeedTag,\n  updateFeedTag,\n  fetchFeed,\n} from '../state/actions';\nimport FeedTagType from '../types/feedTag';\n// Components\nimport FeedList from '../components/feedList';\nimport TagList from '../components/tagList';\nimport ErrorMessage from '../components/errorMessage';\n\nconst HomePage = (props) => {\n  const {\n    selectedFeed,\n    handleSelectRssFeedTag,\n    handleNewRssFeed,\n    handleGetRssFeed,\n    rssFeed,\n    isLoadingFeed,\n    feedTags,\n    handleDeleteFeedTag,\n    handleUpdateFeedTag,\n    errorMessage,\n  } = props;\n\n  const [feedUrl, setFeedUrl] = useState('');\n  useEffect(() => {\n    if (selectedFeed) {\n      handleGetRssFeed(selectedFeed.url);\n    }\n  }, [selectedFeed]);\n\n  function handleSelectFeed(tagId) {\n    if (tagId === selectedFeed.id) {\n      return;\n    }\n    handleSelectRssFeedTag(tagId);\n  }\n\n  function handleFeedUrlChange(evt) {\n    const {\n      target: { value },\n    } = evt;\n    setFeedUrl(value);\n  }\n\n  function handleAddRssFeed() {\n    handleNewRssFeed(feedUrl);\n  }\n\n  return (\n    <Layout>\n      <div>\n        <div>\n          {feedTags && (\n            <TagList\n              selectedFeed={selectedFeed}\n              handleDeleteFeed={handleDeleteFeedTag}\n              handleUpdateFeed={handleUpdateFeedTag}\n              handleSelectFeed={handleSelectFeed}\n              feedTags={feedTags}\n            />\n          )}\n        </div>\n        {errorMessage && !isLoadingFeed && (\n          <ErrorMessage label=\"Error message\" text={errorMessage} />\n        )}\n        <input type=\"text\" value={feedUrl} onChange={handleFeedUrlChange} placeholder=\"URL Link\" />\n        <button type=\"button\" onClick={handleAddRssFeed}>\n          Add Feed\n        </button>\n      </div>\n      <div>{isLoadingFeed ? <div>Loading...</div> : rssFeed && <FeedList {...rssFeed} />}</div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = ({\n  rssFeed, feedTags, errorMessage, selectedFeed, isLoadingFeed,\n}) => ({\n  rssFeed,\n  errorMessage,\n  feedTags,\n  selectedFeed,\n  isLoadingFeed,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleNewRssFeed: (urlLink) => {\n    dispatch(addNewRssFeedDetails(urlLink));\n  },\n  handleSelectRssFeedTag: (tagId) => {\n    dispatch(selectRssFeedTag(tagId));\n  },\n  handleErrorMsg: (errorMessage) => {\n    dispatch(addErrorMessgae(errorMessage));\n  },\n  handleRemoveErrorMsg: () => {\n    dispatch(dismissErrorMessage());\n  },\n  handleDeleteFeedTag: (tagId) => {\n    dispatch(deleteFeedTag(tagId));\n  },\n  handleUpdateFeedTag: (tagId, newName) => {\n    dispatch(updateFeedTag(tagId, newName));\n  },\n  handleGetRssFeed: (urlLink) => {\n    dispatch(fetchFeed(urlLink));\n  },\n});\n\nHomePage.propTypes = {\n  selectedFeed: PropTypes.node,\n  handleSelectRssFeedTag: PropTypes.func,\n  handleNewRssFeed: PropTypes.func,\n  handleGetRssFeed: PropTypes.func,\n  rssFeed: PropTypes.node,\n  isLoadingFeed: PropTypes.bool,\n  feedTags: PropTypes.arrayOf(PropTypes.shape(FeedTagType)),\n  handleDeleteFeedTag: PropTypes.func,\n  handleUpdateFeedTag: PropTypes.func,\n  errorMessage: PropTypes.string,\n};\n\nHomePage.defaultProps = {\n  selectedFeed: null,\n  handleSelectRssFeedTag: null,\n  handleNewRssFeed: null,\n  handleGetRssFeed: null,\n  rssFeed: null,\n  isLoadingFeed: null,\n};\n\nconst Connector = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomePage);\n\nexport { Connector as default, HomePage };\n","export const setItem = ({ key, value }) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const getItem = (key) => {\n  const item = localStorage.getItem(key);\n  return JSON.parse(item);\n};\n\nexport const deleteItem = key => localStorage.deleteItem(key);\n","import { getRssFeeds } from '../services/rssFeedStorageSrv';\n\nconst feedTags = getRssFeeds();\n\nexport default {\n  rssFeed: null,\n  feedTags,\n  selectedFeed: feedTags[0],\n  errorMessage: '',\n  isLoadingFeed: false,\n};\n","import { getItem, setItem } from './localStorageSrv';\n\nconst RSS_FEED_KEY = 'rssFeeds';\n\nexport const getRssFeeds = () => getItem(RSS_FEED_KEY) || [];\n\nexport const saveRssFeed = ({ id, name, url }) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  currFeeds.push({ id, name, url });\n  setItem({ key: RSS_FEED_KEY, value: currFeeds });\n  return currFeeds;\n};\n\nexport const deleteRssFeed = (feedId) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  if (currFeeds.length > 0) {\n    const updatedFeeds = currFeeds.filter(f => f.id !== feedId);\n    setItem({ key: RSS_FEED_KEY, value: updatedFeeds });\n    return updatedFeeds;\n  }\n  return currFeeds;\n};\n\nexport const updateRssFeed = ({ tagId, newName }) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  const feedIndex = currFeeds.findIndex(f => f.id === tagId);\n\n  if (feedIndex > -1) {\n    const feeds = [...currFeeds];\n    const newFeedDetails = {\n      ...feeds[feedIndex],\n      name: newName,\n    };\n    feeds.splice(feedIndex, 1, newFeedDetails);\n    setItem({ key: RSS_FEED_KEY, value: feeds });\n    return feeds;\n  }\n  return currFeeds;\n};\n","import {\n  SELECT_RSS_FEED,\n  ADD_ERROR_MESSAGE,\n  DISMISS_ERROR_MESSAGE,\n  SELECT_RSS_FEED_TAG,\n  TOGGLE_IS_LOADING_FEED,\n  DELETE_RSS_FEED,\n  UPDATE_FEED_TAG,\n  ADD_FEED_TAG,\n} from './actionTypes';\nimport initialState from './initialState';\n\nconst addErrorMessage = (state, action) => {\n  const { errorMessage } = action;\n  const { rssFeed } = state;\n  return Object.assign({}, state, {\n    errorMessage,\n    rssFeed: errorMessage && errorMessage.length === 0 ? rssFeed : null,\n  });\n};\n\nconst dismissErrorMessage = state => Object.assign({}, state, {\n  errorMessage: '',\n});\n\nconst toggleIsLoading = (state, action) => {\n  const { isLoading } = action;\n  const { isLoadingFeed } = state;\n  return Object.assign({}, state, {\n    isLoadingFeed: isLoading === undefined ? !isLoadingFeed : isLoading,\n  });\n};\n\nconst selectRssFeed = (state, action) => {\n  const { rssFeed } = action;\n  return Object.assign({}, state, {\n    rssFeed,\n    errorMessage: '',\n  });\n};\n\nconst selectRssFeedTag = (state, action) => {\n  const { tagId } = action;\n  const { feedTags } = state;\n  const selectedIndex = feedTags.findIndex(ft => ft.id === tagId);\n  return Object.assign({}, state, {\n    selectedFeed: feedTags[selectedIndex],\n  });\n};\n\nconst deleteRssFeed = (state, action) => {\n  const { tagId } = action;\n  const { selectedFeed, feedTags } = state;\n  const remainingTags = feedTags.filter(tag => tag.id !== tagId);\n  return {\n    ...state,\n    feedTags: remainingTags,\n    rssFeed: remainingTags.length === 0 ? null : state.rssFeed,\n    selectedFeed: (selectedFeed.id === tagId && remainingTags[0]) || selectedFeed,\n  };\n};\n\nconst updateFeedTag = (state, action) => {\n  const { tagId, newName } = action;\n  const { feedTags } = state;\n  const feedIndex = feedTags.findIndex(f => f.id === tagId);\n  const feeds = [...feedTags];\n  if (feedIndex > -1) {\n    const newFeedDetails = {\n      ...feeds[feedIndex],\n      name: newName,\n    };\n    feeds.splice(feedIndex, 1, newFeedDetails);\n  }\n  return {\n    ...state,\n    feedTags: feeds,\n  };\n};\n\nconst addFeedTag = (state, action) => {\n  const { id, name, url } = action;\n  const { feedTags } = state;\n  const updatedTags = [...feedTags];\n  const newTag = {\n    id,\n    name,\n    url,\n  };\n  updatedTags.push(newTag);\n  return {\n    ...state,\n    feedTags: updatedTags,\n    selectedFeed: newTag,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RSS_FEED_TAG:\n      return selectRssFeedTag(state, action);\n    case SELECT_RSS_FEED:\n      return selectRssFeed(state, action);\n    case ADD_ERROR_MESSAGE:\n      return addErrorMessage(state, action);\n    case DISMISS_ERROR_MESSAGE:\n      return dismissErrorMessage(state);\n    case TOGGLE_IS_LOADING_FEED:\n      return toggleIsLoading(state, action);\n    case DELETE_RSS_FEED:\n      return deleteRssFeed(state, action);\n    case UPDATE_FEED_TAG:\n      return updateFeedTag(state, action);\n    case ADD_FEED_TAG:\n      return addFeedTag(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducer';\nimport { DELETE_RSS_FEED, ADD_FEED_TAG, UPDATE_FEED_TAG } from './actionTypes';\nimport { saveRssFeed, deleteRssFeed, updateRssFeed } from '../services/rssFeedStorageSrv';\n\nconst persistToStorage = store => next => (action) => {\n  switch (action.type) {\n    case DELETE_RSS_FEED: {\n      deleteRssFeed(action.tagId);\n      break;\n    }\n    case UPDATE_FEED_TAG: {\n      const { tagId, newName } = action;\n      updateRssFeed({ tagId, newName });\n      break;\n    }\n    case ADD_FEED_TAG: {\n      const { name, url, id } = action;\n      saveRssFeed({ id, name, url });\n      break;\n    }\n    default:\n      break;\n  }\n  return next(action);\n};\n\nexport default (preloadedState) => {\n  // Add all middlewares in array\n  const middlewares = [thunkMiddleware, persistToStorage];\n\n  // Add logger when in development\n  if (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n  }\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(reducer, preloadedState, composedEnhancers);\n\n  return store;\n};\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Home from './pages/home';\nimport configureStore from './state/configureStore';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Home />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}