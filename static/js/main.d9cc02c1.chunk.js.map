{"version":3,"sources":["components/header.js","config.js","components/layout.js","services/localStorageSrv.js","state/actions.js","state/actionTypes.js","services/rssFeedStorageSrv.js","components/FeedItem/author.js","components/FeedItem/publishDate.js","components/FeedItem/feedItem.js","components/FeedItem/index.js","components/feedTitle.js","components/feedList.js","components/icon.js","components/feedTag.js","components/tagList.js","pages/home.js","state/initialState.js","state/reducer.js","App.js","state/configureStore.js","serviceWorker.js","index.js"],"names":["wrapperStyle","background","marginBottom","padding","headerStyle","margin","color","textDecoration","textAlign","Header","_ref","siteTitle","react_default","a","createElement","style","config","title","Layout","children","header","setItem","key","value","localStorage","JSON","stringify","getItem","item","parse","rssParser","RSSParser","parseFeed","feedUrl","url","Promise","resolve","reject","parseURL","error","feed","message","console","log","toggleIsLoadingFeed","isLoading","type","updateRssFeeds","feedTags","addNewRssFeedDetails","urlLink","dispatch","getState","then","selectRssFeed","name","currFeeds","push","id","length","saveRssFeed","generateTagFeed","catch","addErrorMessgae","rssFeed","errorMessage","deleteFeedTag","tagId","remainingTags","feedId","updatedFeeds","filter","f","deleteRssFeed","updateFeedTag","newName","_ref2","feedIndex","findIndex","feeds","Object","toConsumableArray","newFeedDetails","objectSpread","splice","updateRssFeed","authorStyle","display","fontWeight","Author","author","datePublishedStyle","fontSize","PublishDate","pubDate","concat","Date","toLocaleDateString","titleStyle","border","borderRight","borderLeft","borderTop","htmlContentStyle","FeedItem","props","link","content","href","FeedItem_author","publishDate","dangerouslySetInnerHTML","__html","FeedTitle","listStyle","borderRadius","width","position","noItemsMsgStyle","FeedList","feedTitle","items","map","index","components_FeedItem","assign","Icon","size","spin","className","defaultName","defaultProps","nameStyle","marginRight","deleteBtnStyle","feedTag","isSelected","onFeedDelete","onFeedClick","onFeedUpdate","_useState","useState","_useState2","slicedToArray","isEditMode","setEditMode","_useState3","_useState4","tagName","setTagName","cursor","toggleEditMode","alt","Fragment","onChange","evt","target","icon","onClick","onDoubleClick","TagList","handleDeleteFeed","handleSelectFeed","handleUpdateFeed","selectedFeed","ft","components_feedTag","Connector","connect","isLoadingFeed","handleNewRssFeed","handleSelectRssFeedTag","selectFeedTag","selectRssFeedTag","handleErrorMsg","handleRemoveErrorMsg","handleDeleteFeedTag","handleUpdateFeedTag","handleGetRssFeed","setFeedUrl","useEffect","components_layout","tagList","placeholder","feedList","initialState","addErrorMessage","state","action","dismissErrorMessage","toggleIsLoading","undefined","selectedIndex","updateFeedTags","reducer","arguments","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","App","es","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9cc02c1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst wrapperStyle = {\n  background: \"rebeccapurple\",\n  marginBottom: \"1em\",\n  padding: \"1em .5em\"\n};\n\nconst headerStyle = {\n  margin: 0,\n  color: \"white\",\n  textDecoration: \"none\",\n  textAlign: \"left\"\n};\n\nconst Header = ({ siteTitle }) => (\n  <div style={wrapperStyle}>\n    <h1 style={headerStyle}>{siteTitle}</h1>\n  </div>\n);\n\nexport default Header;\n","export default {\n  siteMetadata: {\n    title: \"RSS Dashboard\"\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./header\";\nimport config from \"../config\";\n\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header siteTitle={config.siteMetadata.title} />\n    <div style={{ padding: \"5em\" }}>{children}</div>\n  </div>\n);\n\nexport default Layout;\n","export const setItem = ({ key, value }) => {\n  localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport const getItem = key => {\n  const item = localStorage.getItem(key)\n  return JSON.parse(item)\n}\n\nexport const deleteItem = key => {\n  return localStorage.deleteItem(key)\n}\n","import RSSParser from \"rss-parser\";\nimport {\n  SELECT_RSS_FEED_TAG,\n  ADD_ERROR_MESSAGE,\n  DISMISS_ERROR_MESSAGE,\n  SELECT_RSS_FEED,\n  UPDATE_RSS_FEEDS,\n  TOGGLE_IS_LOADING_FEED\n} from \"./actionTypes\";\n\nimport {\n  saveRssFeed,\n  deleteRssFeed,\n  updateRssFeed\n} from \"../services/rssFeedStorageSrv\";\n\nconst rssParser = new RSSParser();\n\nconst parseFeed = feedUrl => {\n  let url = feedUrl;\n  //Add proxy when working in development to resolve CORS issues\n  if (process.env.NODE_ENV === \"123123\") {\n    const CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n    url = `${CORS_PROXY}${feedUrl}`;\n  }\n\n  return new Promise((resolve, reject) => {\n    return rssParser.parseURL(url, (error, feed) => {\n      if (error) {\n        let message = error.message || \"Unexpected error occurred\";\n        return reject(message);\n      }\n      console.log(feed);\n      resolve(feed);\n    });\n  });\n};\n\nconst generateTagFeed = (title, urlLink) => {\n  return {\n    url: urlLink,\n    name: title || urlLink\n  };\n};\n\nconst selectFeedTag = tagId => {\n  return { type: SELECT_RSS_FEED_TAG, tagId };\n};\n\nconst toggleIsLoadingFeed = isLoading => {\n  return { type: TOGGLE_IS_LOADING_FEED, isLoading };\n};\n\nconst updateRssFeeds = feedTags => {\n  return { type: UPDATE_RSS_FEEDS, feedTags };\n};\n\nexport const fetchFeed = feedUrl => dispatch => {\n  dispatch(toggleIsLoadingFeed(true));\n  parseFeed(feedUrl)\n    .then(feed => {\n      console.log(feed);\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(selectRssFeed(feed));\n    })\n    .catch(error => {\n      dispatch(toggleIsLoadingFeed(false));\n      return dispatch(addErrorMessgae(error));\n    });\n};\n\nexport const addNewRssFeedDetails = urlLink => (dispatch, getState) => {\n  dispatch(toggleIsLoadingFeed(true));\n  parseFeed(urlLink)\n    .then(feed => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(selectRssFeed(feed));\n      const feedTag = generateTagFeed(feed.title, urlLink);\n      const feedTags = saveRssFeed(feedTag);\n      return dispatch(updateRssFeeds(feedTags));\n    })\n    .catch(error => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(addErrorMessgae(error));\n    });\n};\n\nexport const selectRssFeed = rssFeed => {\n  return { type: SELECT_RSS_FEED, rssFeed };\n};\n\nexport const selectRssFeedTag = tagId => {\n  return selectFeedTag(tagId);\n};\n\nexport const addErrorMessgae = errorMessage => {\n  return { type: ADD_ERROR_MESSAGE, errorMessage };\n};\n\nexport const dismissErrorMessage = () => {\n  return { type: DISMISS_ERROR_MESSAGE };\n};\n\nexport const deleteFeedTag = tagId => {\n  const remainingTags = deleteRssFeed(tagId);\n  return updateRssFeeds(remainingTags);\n};\n\nexport const updateFeedTag = (tagId, newName) => {\n  const remainingTags = updateRssFeed({ tagId, newName });\n  return updateRssFeeds(remainingTags);\n};\n","export const SELECT_RSS_FEED = \"SELECT_RSS_FEED\";\nexport const ADD_ERROR_MESSAGE = \"ADD_ERROR_MESSAGE\";\nexport const DISMISS_ERROR_MESSAGE = \"DISMISS_ERROR_MESSAGE\";\nexport const ADD_NEW_RSS_FEED_DETAILS = \"ADD_NEW_RSS_FEED_DETAILS\";\nexport const UPDATE_RSS_FEEDS = \"UPDATE_RSS_FEEDS\";\nexport const SELECT_RSS_FEED_TAG = \"SELECT_RSS_FEED_TAG\";\nexport const TOGGLE_IS_LOADING_FEED = \"TOGGLE_IS_LOADING_FEED\";\n","import { getItem, setItem } from \"./localStorageSrv\";\n\nconst RSS_FEED_KEY = \"rssFeeds\";\n\nexport const getRssFeeds = () => {\n  return getItem(RSS_FEED_KEY) || [];\n};\n\nexport const saveRssFeed = ({ name, url }) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  currFeeds.push({ id: currFeeds.length + 1, name, url });\n  setItem({ key: RSS_FEED_KEY, value: currFeeds });\n  return currFeeds;\n};\n\nexport const deleteRssFeed = feedId => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  if (currFeeds.length > 0) {\n    const updatedFeeds = currFeeds.filter(f => f.id !== feedId);\n    setItem({ key: RSS_FEED_KEY, value: updatedFeeds });\n    return updatedFeeds;\n  }\n  return currFeeds;\n};\n\nexport const updateRssFeed = ({ tagId, newName }) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  const feedIndex = currFeeds.findIndex(f => f.id === tagId);\n\n  if (feedIndex > -1) {\n    const feeds = [...currFeeds];\n    const newFeedDetails = {\n      ...feeds[feedIndex],\n      name: newName\n    };\n    feeds.splice(feedIndex, 1, newFeedDetails);\n    setItem({ key: RSS_FEED_KEY, value: feeds });\n    return feeds;\n  }\n  return currFeeds;\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst authorStyle = {\n  margin: \"0 .5em 0 0\",\n  display: \"inline-block\",\n  fontWeight: \"normal\"\n};\n\nconst Author = ({ author }) => <h4 style={authorStyle}>{author}</h4>;\n\nexport default Author;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst datePublishedStyle = {\n  margin: 0,\n  display: \"inline-block\",\n  fontSize: 12\n};\n\nconst PublishDate = ({ pubDate }) => (\n  <p style={datePublishedStyle}>\n    {`${new Date(pubDate).toLocaleDateString()}`}\n  </p>\n);\n\nexport default PublishDate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Components\nimport Author from \"./author\";\nimport PublishDate from \"./publishDate\";\n\nconst titleStyle = {\n  fontSize: 18,\n  fontWeight: \"bold\",\n  textDecoration: \"none\",\n  color: \"#000000a6\"\n};\n\nconst wrapperStyle = {\n  border: \"1px solid #ebedf0\",\n  borderRight: 0,\n  borderLeft: 0,\n  borderTop: 0,\n  padding: \"15px\",\n  color: \"#000000a6\"\n};\nconst htmlContentStyle = { margin: \"1em 0\", fontSize: 12 };\n\nconst authorStyle = {\n  margin: 0\n};\n\nconst FeedItem = props => {\n  const { link, title, pubDate, author, content } = props;\n  return (\n    <div style={wrapperStyle}>\n      <a style={titleStyle} href={link}>\n        {title}\n      </a>\n      <div style={authorStyle}>\n        {author && <Author author={author} />}\n        {pubDate && <PublishDate pubDate={pubDate} />}\n      </div>\n      <div\n        style={htmlContentStyle}\n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    </div>\n  );\n};\n\n// FeedItem.propTypes = {\n//   url: PropTypes.string,\n//   content: PropTypes.string,\n//   title: PropTypes.string.isRequired,\n//   pudDate: PropTypes.any,\n//   author: PropTypes.shape({\n//     name: PropTypes.string,\n//   }),\n//   contentSnippet: PropTypes.string,\n// }\n\n// FeedItem.defaultProps = {\n//   contentSnippet: '',\n//   url: '',\n//   content: '',\n//   author: null,\n//   pubDate: null,\n// }\n\nexport default FeedItem;\n","import FeedItem from \"./feedItem\";\nexport default FeedItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst titleStyle = {\n  border: \"1px solid #ebedf0\",\n  borderTop: 0,\n  borderRight: 0,\n  borderLeft: 0\n};\n\nconst FeedTitle = ({ title }) => (\n  <div style={titleStyle}>\n    <h2>{title}</h2>\n  </div>\n);\n\nexport default FeedTitle;\n","import React from \"react\";\nimport FeedItem from \"./FeedItem\";\nimport FeedTitle from \"./feedTitle\";\n\nconst listStyle = {\n  border: \"1px solid #ebedf0\",\n  borderRadius: 2,\n  width: \"100%\",\n  position: \"relative\",\n  padding: \"20px\"\n};\n\nconst noItemsMsgStyle = {};\nconst FeedList = props => {\n  return (\n    <div style={listStyle}>\n      <FeedTitle {...props} />\n      {props.items.length === 0 ? (\n        <div style={noItemsMsgStyle}>No Items found</div>\n      ) : (\n        props.items.map((item, index) => <FeedItem key={index} {...item} />)\n      )}\n    </div>\n  );\n};\n\nexport default FeedList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Icon = props => {\n  const { name, size, spin, className } = props;\n  return (\n    <i\n      {...props}\n      className={`fa fa-${name} fa-${size} ${\n        spin ? \"fa-spin\" : \"\"\n      } ${className}`}\n    />\n  );\n};\n\nIcon.defaultName = \"Icon\";\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  spin: PropTypes.bool\n};\n\nIcon.defaultProps = {\n  spin: false,\n  size: \"1x\"\n};\n\nexport default Icon;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"./icon\";\n\nconst nameStyle = {\n  marginRight: \".3em\"\n};\nconst deleteBtnStyle = {};\n\nconst feedTag = props => {\n  const {\n    url,\n    isSelected,\n    name,\n    id,\n    onFeedDelete,\n    onFeedClick,\n    onFeedUpdate\n  } = props;\n\n  const [isEditMode, setEditMode] = useState(false);\n  const [tagName, setTagName] = useState(name);\n\n  const wrapperStyle = {\n    border: \"1px solid #6e2a9e\",\n    display: \"inline-block\",\n    padding: \"5px\",\n    borderRadius: \"30px\",\n    background: `${isSelected ? \"#9352ea\" : \"#6e2a9e\"}`,\n    color: \"white\",\n    fontSize: \"14px\",\n    cursor: \"pointer\"\n  };\n\n  function toggleEditMode() {\n    setEditMode(!isEditMode);\n  }\n\n  function handleNameChange(evt) {\n    const {\n      target: { value }\n    } = evt;\n    setTagName(value);\n  }\n\n  function handleConfirmNameChange() {\n    if (tagName && tagName.length > 0 && tagName !== name) {\n      onFeedUpdate(id, tagName);\n    }\n    toggleEditMode();\n  }\n\n  return (\n    <div style={wrapperStyle} alt={url} id={id}>\n      {isEditMode && (\n        <React.Fragment>\n          <input\n            type=\"text\"\n            value={tagName}\n            onChange={handleNameChange}\n            style={nameStyle}\n          />\n          <Icon name=\"check-circle\" onClick={handleConfirmNameChange} />\n        </React.Fragment>\n      )}\n      {!isEditMode && (\n        <div onDoubleClick={toggleEditMode}>\n          <span\n            onClick={() => {\n              onFeedClick(id);\n            }}\n            style={nameStyle}\n          >\n            {name}\n          </span>\n          <span\n            onClick={() => {\n              onFeedDelete(id);\n            }}\n            style={deleteBtnStyle}\n          >\n            <Icon name=\"times-circle\" />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default feedTag;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Components\nimport FeedTag from \"./feedTag\";\n\nconst TagList = ({\n  feedTags,\n  handleDeleteFeed,\n  handleSelectFeed,\n  handleUpdateFeed,\n  selectedFeed\n}) => (\n  <div>\n    {feedTags.map(ft => (\n      <FeedTag\n        {...ft}\n        isSelected={selectedFeed && selectedFeed.id === ft.id}\n        onFeedDelete={handleDeleteFeed}\n        onFeedClick={handleSelectFeed}\n        onFeedUpdate={handleUpdateFeed}\n      />\n    ))}\n  </div>\n);\n\nexport default TagList;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { connect } from \"react-redux\";\nimport {\n  selectRssFeedTag,\n  addNewRssFeedDetails,\n  addErrorMessgae,\n  dismissErrorMessage,\n  deleteFeedTag,\n  updateFeedTag,\n  fetchFeed\n} from \"../state/actions\";\n\n//Components\nimport FeedList from \"../components/feedList\";\nimport TagList from \"../components/tagList\";\n\nconst HomePage = props => {\n  const {\n    selectedFeed,\n    handleSelectRssFeedTag,\n    handleNewRssFeed,\n    handleGetRssFeed,\n    rssFeed,\n    isLoadingFeed\n  } = props;\n\n  const [feedUrl, setFeedUrl] = useState(\"\");\n  useEffect(() => {\n    if (selectedFeed) {\n      handleGetRssFeed(selectedFeed.url);\n    }\n  }, [selectedFeed]);\n\n  function handleSelectFeed(tagId) {\n    if (tagId === selectedFeed.id) {\n      return;\n    }\n    handleSelectRssFeedTag(tagId);\n  }\n\n  function handleFeedUrlChange(evt) {\n    const {\n      target: { value }\n    } = evt;\n    setFeedUrl(value);\n  }\n\n  function handleAddRssFeed() {\n    handleNewRssFeed(feedUrl);\n  }\n\n  return (\n    <Layout>\n      <div>\n        <div>\n          {props.feedTags && (\n            <TagList\n              selectedFeed={props.selectedFeed}\n              handleDeleteFeed={props.handleDeleteFeedTag}\n              handleUpdateFeed={props.handleUpdateFeedTag}\n              handleSelectFeed={handleSelectFeed}\n              feedTags={props.feedTags}\n            />\n          )}\n        </div>\n        <p>Error message: {props.errorMessage}</p>\n        <input\n          type=\"text\"\n          value={feedUrl}\n          onChange={handleFeedUrlChange}\n          placeholder=\"URL Link\"\n        />\n        <button type=\"button\" onClick={handleAddRssFeed}>\n          Add Feed\n        </button>\n      </div>\n      <div>\n        {isLoadingFeed ? (\n          <div>Loading...</div>\n        ) : (\n          rssFeed && <FeedList {...rssFeed} />\n        )}\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = ({\n  rssFeed,\n  feedTags,\n  errorMessage,\n  selectedFeed,\n  isLoadingFeed\n}) => {\n  return { rssFeed, errorMessage, feedTags, selectedFeed, isLoadingFeed };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleNewRssFeed: urlLink => {\n      dispatch(addNewRssFeedDetails(urlLink));\n    },\n    handleSelectRssFeedTag: tagId => {\n      dispatch(selectRssFeedTag(tagId));\n    },\n    handleErrorMsg: errorMessage => {\n      dispatch(addErrorMessgae(errorMessage));\n    },\n    handleRemoveErrorMsg: () => {\n      dispatch(dismissErrorMessage());\n    },\n    handleDeleteFeedTag: tagId => {\n      dispatch(deleteFeedTag(tagId));\n    },\n    handleUpdateFeedTag: (tagId, newName) => {\n      dispatch(updateFeedTag(tagId, newName));\n    },\n    handleGetRssFeed: urlLink => {\n      dispatch(fetchFeed(urlLink));\n    }\n  };\n};\n\nconst Connector = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage);\n\nexport { Connector as default, HomePage };\n","import { getRssFeeds } from \"../services/rssFeedStorageSrv\";\n\nconst feedTags = getRssFeeds();\n\nexport default {\n  rssFeed: null,\n  feedTags: feedTags,\n  selectedFeed: feedTags[0] || null,\n  errorMessage: \"\",\n  isLoadingFeed: false\n};\n","import {\n  SELECT_RSS_FEED,\n  ADD_ERROR_MESSAGE,\n  DISMISS_ERROR_MESSAGE,\n  ADD_NEW_RSS_FEED_DETAILS,\n  UPDATE_RSS_FEEDS,\n  SELECT_RSS_FEED_TAG,\n  TOGGLE_IS_LOADING_FEED\n} from \"./actionTypes\";\nimport initialState from \"./initialState\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RSS_FEED_TAG:\n      return selectRssFeedTag(state, action);\n    case SELECT_RSS_FEED:\n      return selectRssFeed(state, action);\n    case ADD_ERROR_MESSAGE:\n      return addErrorMessage(state, action);\n    case DISMISS_ERROR_MESSAGE:\n      return dismissErrorMessage(state);\n    case UPDATE_RSS_FEEDS:\n      return updateFeedTags(state, action);\n    case TOGGLE_IS_LOADING_FEED:\n      return toggleIsLoading(state, action);\n    default:\n      return state;\n  }\n};\n\nconst addErrorMessage = (state, action) => {\n  const { errorMessage } = action;\n  const { rssFeed } = state;\n  return Object.assign({}, state, {\n    errorMessage: errorMessage,\n    rssFeed: errorMessage && errorMessage.length === 0 ? null : rssFeed\n  });\n};\n\nconst dismissErrorMessage = state => {\n  return Object.assign({}, state, {\n    errorMessage: \"\"\n  });\n};\n\nconst toggleIsLoading = (state, action) => {\n  const { isLoading } = action;\n  const { isLoadingFeed } = state;\n  return Object.assign({}, state, {\n    isLoadingFeed: isLoading === undefined ? !isLoadingFeed : isLoading\n  });\n};\n\nconst selectRssFeed = (state, action) => {\n  const { rssFeed } = action;\n  return Object.assign({}, state, {\n    rssFeed,\n    errorMessage: \"\"\n  });\n};\n\nconst selectRssFeedTag = (state, action) => {\n  const { tagId } = action;\n  const { feedTags } = state;\n  const selectedIndex = feedTags.findIndex(ft => ft.id === tagId);\n  return Object.assign({}, state, {\n    selectedFeed: feedTags[selectedIndex]\n  });\n};\n\nconst updateFeedTags = (state, action) => {\n  return Object.assign({}, state, {\n    feedTags: action.feedTags\n  });\n};\n\nexport default reducer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./state/configureStore\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <Home />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"./reducer\";\n\nexport default preloadedState => {\n  const middlewares = [thunkMiddleware];\n\n  if (process.env.NODE_ENV === \"development\") {\n    middlewares.push(logger);\n  }\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(reducer, preloadedState, composedEnhancers);\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}