{"version":3,"sources":["components/header.js","config.js","components/layout.js","services/localStorageSrv.js","state/actions.js","state/actionTypes.js","services/rssFeedStorageSrv.js","types/feedTag.js","components/FeedItem/author.js","components/FeedItem/publishDate.js","components/FeedItem/feedItem.js","types/feedItem.js","components/FeedItem/index.js","components/feedTitle.js","components/feedList.js","components/icon.js","components/feedTag.js","components/tagList.js","pages/home.js","state/initialState.js","state/reducer.js","App.js","state/configureStore.js","serviceWorker.js","index.js"],"names":["wrapperStyle","background","marginBottom","padding","headerStyle","margin","color","textDecoration","textAlign","Header","_ref","siteTitle","react_default","a","createElement","style","config","title","Layout","children","header","setItem","key","value","localStorage","JSON","stringify","getItem","item","parse","rssParser","RSSParser","parseFeed","feedUrl","url","concat","Promise","resolve","reject","parseURL","error","feed","message","selectFeedTag","tagId","type","toggleIsLoadingFeed","isLoading","updateRssFeeds","feedTags","selectRssFeed","rssFeed","addErrorMessgae","errorMessage","deleteFeedTag","remainingTags","feedId","currFeeds","length","updatedFeeds","filter","f","id","deleteRssFeed","updateFeedTag","newName","_ref2","feedIndex","findIndex","feeds","Object","toConsumableArray","newFeedDetails","objectSpread","name","splice","updateRssFeed","addNewRssFeedDetails","urlLink","dispatch","then","feedTag","Date","getTime","generateTagFeed","push","saveRssFeed","catch","PropTypes","string","bool","number","func","authorStyle","display","fontWeight","Author","author","datePublishedStyle","fontSize","PublishDate","pubDate","toLocaleDateString","titleStyle","isRequired","shape","border","borderRight","borderLeft","borderTop","htmlContentStyle","FeedItem","props","link","content","href","FeedItem_author","publishDate","dangerouslySetInnerHTML","__html","defaultProps","FeedTitle","listStyle","borderRadius","width","position","noItemsMsgStyle","FeedList","items","objectWithoutProperties","feedTitle","map","components_FeedItem","assign","Icon","size","spin","className","defaultName","nameStyle","marginRight","btnCleanStyle","boxShadow","deleteBtnStyle","FeedTag","isSelected","onFeedDelete","onFeedClick","onFeedUpdate","_useState","useState","_useState2","slicedToArray","isEditMode","setEditMode","_useState3","_useState4","tagName","setTagName","cursor","toggleEditMode","alt","Fragment","onChange","evt","target","icon","onClick","onDoubleClick","TagList","handleDeleteFeed","handleSelectFeed","handleUpdateFeed","selectedFeed","ft","components_feedTag","HomePage","handleSelectRssFeedTag","handleNewRssFeed","handleGetRssFeed","isLoadingFeed","handleDeleteFeedTag","handleUpdateFeedTag","setFeedUrl","useEffect","components_layout","tagList","placeholder","feedList","Connector","connect","selectRssFeedTag","handleErrorMsg","handleRemoveErrorMsg","initialState","reducer","state","arguments","undefined","action","selectedIndex","addErrorMessage","dismissErrorMessage","updateFeedTags","toggleIsLoading","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","configureStore","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oKAGMA,EAAe,CACnBC,WAAY,gBACZC,aAAc,MACdC,QAAS,YAGLC,EAAc,CAClBC,OAAQ,EACRC,MAAO,QACPC,eAAgB,OAChBC,UAAW,QAaEC,EAVA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAAC,EAAAC,cAAA,OAAKC,MAAOf,GACVY,EAAAC,EAAAC,cAAA,MAAIC,MAAOX,GAAcO,KClBdK,EACC,CACZC,MAAO,iBCeIC,SAVA,SAAAR,GAAA,IAAGS,EAAHT,EAAGS,SAAH,OACbP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAD,CAAQT,UAAWK,EAAoBC,QACvCL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEZ,QAAS,QAAUgB,uCCVxBE,EAAU,SAAAX,GAAoB,IAAjBY,EAAiBZ,EAAjBY,IAAKC,EAAYb,EAAZa,MAC7BC,aAAaH,QAAQC,EAAKG,KAAKC,UAAUH,KAG9BI,EAAU,SAACL,GACtB,IAAMM,EAAOJ,aAAaG,QAAQL,GAClC,OAAOG,KAAKI,MAAMD,ICUdE,EAAY,IAAIC,IAEhBC,EAAY,SAACC,GACjB,IAAIC,EAAMD,EAOV,OAHEC,EAAG,GAAAC,OADgB,wCAChBA,OAAmBF,GAGjB,IAAIG,QAAQ,SAACC,EAASC,GAAV,OAAqBR,EAAUS,SAASL,EAAK,SAACM,EAAOC,GACtE,GAAID,EAAO,CACT,IAAME,EAAUF,EAAME,SAAW,4BACjC,OAAOJ,EAAOI,GAEhB,OAAOL,EAAQI,QAUbE,EAAgB,SAAAC,GAAK,MAAK,CAAEC,KCpCC,sBDoC0BD,UAEvDE,EAAsB,SAAAC,GAAS,MAAK,CACxCF,KCtCoC,yBDuCpCE,cAGIC,EAAiB,SAAAC,GAAQ,MAAK,CAAEJ,KC5CN,mBD4C8BI,aAEjDC,EAAgB,SAAAC,GAAO,MAAK,CAAEN,KClDZ,kBDkDmCM,YAIrDC,EAAkB,SAAAC,GAAY,MAAK,CAC9CR,KCtD+B,oBDuD/BQ,iBAKWC,EAAgB,SAACV,GAC5B,IAAMW,EEjDqB,SAACC,GAC5B,IAAMC,EAAY9B,EAZC,aAYwB,GAC3C,GAAI8B,EAAUC,OAAS,EAAG,CACxB,IAAMC,EAAeF,EAAUG,OAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAON,IAEpD,OADAnC,EAAQ,CAAEC,IAfO,WAeYC,MAAOoC,IAC7BA,EAET,OAAOF,EF0CeM,CAAcnB,GACpC,OAAOI,EAAeO,IAGXS,EAAgB,SAACpB,EAAOqB,GACnC,IAAMV,EE5CqB,SAAAW,GAAwB,IAArBtB,EAAqBsB,EAArBtB,MAAOqB,EAAcC,EAAdD,QAC/BR,EAAY9B,EAtBC,aAsBwB,GACrCwC,EAAYV,EAAUW,UAAU,SAAAP,GAAC,OAAIA,EAAEC,KAAOlB,IAEpD,GAAIuB,GAAa,EAAG,CAClB,IAAME,EAAKC,OAAAC,EAAA,EAAAD,CAAOb,GACZe,EAAcF,OAAAG,EAAA,EAAAH,CAAA,GACfD,EAAMF,GADS,CAElBO,KAAMT,IAIR,OAFAI,EAAMM,OAAOR,EAAW,EAAGK,GAC3BnD,EAAQ,CAAEC,IAhCO,WAgCYC,MAAO8C,IAC7BA,EAET,OAAOZ,EF8BemB,CAAc,CAAEhC,QAAOqB,YAC7C,OAAOjB,EAAeO,IAgBXsB,EAAuB,SAAAC,GAAO,OAAI,SAACC,GAC9CA,EAASjC,GAAoB,IAC7Bd,EAAU8C,GACPE,KAAK,SAACvC,GACLsC,EAASjC,GAAoB,IAC7BiC,EAAS7B,EAAcT,IACvB,IAAMwC,EAvDY,SAAChE,EAAO6D,GAAR,MAAqB,CAC3ChB,IAAI,IAAIoB,MAAOC,UACfjD,IAAK4C,EACLJ,KAAMzD,GAAS6D,GAoDKM,CAAgB3C,EAAKxB,MAAO6D,GACtC7B,EErFe,SAAAvC,GAAuB,IAApBoD,EAAoBpD,EAApBoD,GAAIY,EAAgBhE,EAAhBgE,KAAMxC,EAAUxB,EAAVwB,IAChCuB,EAAY9B,EALC,aAKwB,GAG3C,OAFA8B,EAAU4B,KAAK,CAAEvB,KAAIY,OAAMxC,QAC3Bb,EAAQ,CAAEC,IAPS,WAOUC,MAAOkC,IAC7BA,EFiFc6B,CAAYL,GAE7B,OADAF,EAAS/B,EAAeC,IACjB8B,EAASpC,EAAcsC,EAAQnB,OAEvCyB,MAAM,SAAC/C,GACNuC,EAASjC,GAAoB,IAC7BiC,EAAS3B,EAAgBZ,2BG9FxBgD,IAAUC,OACHD,IAAUE,KAChBF,IAAUC,OACZD,IAAUG,OACAH,IAAUI,KACXJ,IAAUI,KACTJ,IAAUI,YCNpBC,EAAc,CAClBxF,OAAQ,aACRyF,QAAS,eACTC,WAAY,UAQCC,EALA,SAAAtF,GAAA,IAAGuF,EAAHvF,EAAGuF,OAAH,OAAgBrF,EAAAC,EAAAC,cAAA,MAAIC,MAAO8E,GAAcI,ICNlDC,EAAqB,CACzB7F,OAAQ,EACRyF,QAAS,eACTK,SAAU,IAYGC,EATK,SAAA1F,GAAA,IAAG2F,EAAH3F,EAAG2F,QAAH,OAClBzF,EAAAC,EAAAC,cAAA,KAAGC,MAAOmF,GAAV,GAAA/D,OACM,IAAI+C,KAAKmB,GAASC,wBCFpBC,GCNEf,IAAUC,OACPD,IAAUC,OACZD,IAAUC,OAAOe,WACfhB,IAAUC,OACXD,IAAUiB,MAAM,CACtB/B,KAAMc,IAAUC,SDCD,CACjBU,SAAU,GACVJ,WAAY,OACZxF,eAAgB,OAChBD,MAAO,cAGHN,EAAe,CACnB0G,OAAQ,oBACRC,YAAa,EACbC,WAAY,EACZC,UAAW,EACX1G,QAAS,OACTG,MAAO,aAEHwG,EAAmB,CAAEzG,OAAQ,QAAS8F,SAAU,IAEhDN,EAAc,CAClBxF,OAAQ,GAGJ0G,EAAW,SAACC,GAAU,IAExBC,EACED,EADFC,KAAMhG,EACJ+F,EADI/F,MAAOoF,EACXW,EADWX,QAASJ,EACpBe,EADoBf,OAAQiB,EAC5BF,EAD4BE,QAEhC,OACEtG,EAAAC,EAAAC,cAAA,OAAKC,MAAOf,GACVY,EAAAC,EAAAC,cAAA,KAAGC,MAAOwF,EAAYY,KAAMF,GACzBhG,GAEHL,EAAAC,EAAAC,cAAA,OAAKC,MAAO8E,GACTI,GAAUrF,EAAAC,EAAAC,cAACsG,EAAD,CAAQnB,OAAQA,IAC1BI,GAAWzF,EAAAC,EAAAC,cAACuG,EAAD,CAAahB,QAASA,KAEpCzF,EAAAC,EAAAC,cAAA,OAAKC,MAAO+F,EAAkBQ,wBAAyB,CAAEC,OAAQL,OAOvEH,EAASS,aAAe,CACtBP,KAAM,GACNC,QAAS,GACTjB,OAAQ,KACRI,QAAS,MAGIU,IEvDAA,EFuDAA,EGtDTR,EAAa,CACjBG,OAAQ,oBACRG,UAAW,EACXF,YAAa,EACbC,WAAY,GAYCa,EATG,SAAA/G,GAAA,IAAGO,EAAHP,EAAGO,MAAH,OAChBL,EAAAC,EAAAC,cAAA,OAAKC,MAAOwF,GACV3F,EAAAC,EAAAC,cAAA,UAAKG,KCNHyG,EAAY,CAChBhB,OAAQ,oBACRiB,aAAc,EACdC,MAAO,OACPC,SAAU,WACV1H,QAAS,QAGL2H,EAAkB,GAgBTC,EAfE,SAAArH,GAAA,IAAGsH,EAAHtH,EAAGsH,MAAUhB,EAAb1C,OAAA2D,EAAA,EAAA3D,CAAA5D,EAAA,kBACfE,EAAAC,EAAAC,cAAA,OAAKC,MAAO2G,GACV9G,EAAAC,EAAAC,cAACoH,EAAclB,GACG,IAAjBgB,EAAMtE,OACL9C,EAAAC,EAAAC,cAAA,OAAKC,MAAO+G,GAAZ,kBAEAE,EAAMG,IAAI,SAAAvG,GAAI,OAAIhB,EAAAC,EAAAC,cAACsH,EAAD9D,OAAA+D,OAAA,CAAU/G,IAAKM,EAAKX,OAAWW,QClBjD0G,EAAO,SAACtB,GAAU,IAEpBtC,EACEsC,EADFtC,KAAM6D,EACJvB,EADIuB,KAAMC,EACVxB,EADUwB,KAAMC,EAChBzB,EADgByB,UAEpB,OACE7H,EAAAC,EAAAC,cAAA,IAAAwD,OAAA+D,OAAA,GACMrB,EADN,CAEEyB,UAAS,SAAAtG,OAAWuC,EAAX,QAAAvC,OAAsBoG,EAAtB,KAAApG,OACPqG,EAAO,UAAY,GADZ,KAAArG,OAELsG,OAKVH,EAAKI,YAAc,OAQnBJ,EAAKd,aAAe,CAClBgB,MAAM,EACND,KAAM,KACNE,UAAW,IAGEH,QC3BTK,EAAY,CAChBC,YAAa,QAGTC,EAAgB,CACpB5I,WAAY,cACZyG,OAAQ,EACRpG,MAAO,QACPwI,UAAW,UACX3I,QAAS,GAGL4I,EAAiB,GAEjBC,EAAU,SAAChC,GAAU,IAEvB9E,EACE8E,EADF9E,IAAK+G,EACHjC,EADGiC,WAAYvE,EACfsC,EADetC,KAAMZ,EACrBkD,EADqBlD,GAAIoF,EACzBlC,EADyBkC,aAAcC,EACvCnC,EADuCmC,YAAaC,EACpDpC,EADoDoC,aAF/BC,EAKSC,oBAAS,GALlBC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GAKlBI,EALkBF,EAAA,GAKNG,EALMH,EAAA,GAAAI,EAMKL,mBAAS5E,GANdkF,EAAAtF,OAAAkF,EAAA,EAAAlF,CAAAqF,EAAA,GAMlBE,EANkBD,EAAA,GAMTE,EANSF,EAAA,GAQnB5J,EAAe,CACnB0G,OAAQ,oBACRZ,QAAS,eACT3F,QAAS,MACTwH,aAAc,OACd1H,WAAU,GAAAkC,OAAK8G,EAAa,UAAY,WACxC3I,MAAO,QACP6F,SAAU,OACV4D,OAAQ,WAGV,SAASC,IACPN,GAAaD,GAiBf,OACE7I,EAAAC,EAAAC,cAAA,OAAKC,MAAOf,EAAciK,IAAK/H,EAAK4B,GAAIA,GACrC2F,GACC7I,EAAAC,EAAAC,cAACF,EAAAC,EAAMqJ,SAAP,KACEtJ,EAAAC,EAAAC,cAAA,SAAO+B,KAAK,OAAOtB,MAAOsI,EAASM,SAlB3C,SAA0BC,GAAK,IAEjB7I,EACR6I,EADFC,OAAU9I,MAEZuI,EAAWvI,IAc0DR,MAAO4H,IACtE/H,EAAAC,EAAAC,cAACwJ,EAAD,CAAM5F,KAAK,eAAe6F,QAZlC,WACMV,GAAWA,EAAQnG,OAAS,GAAKmG,IAAYnF,GAC/C0E,EAAatF,EAAI+F,GAEnBG,SAWIP,GACA7I,EAAAC,EAAAC,cAAA,OAAK0J,cAAeR,GAClBpJ,EAAAC,EAAAC,cAAA,QACE+B,KAAK,SACL0H,QAAS,WACPpB,EAAYrF,IAEd/C,MAAKuD,OAAAG,EAAA,EAAAH,CAAA,GAAOuE,EAAkBF,IAE7BjE,GAEH9D,EAAAC,EAAAC,cAAA,QACE+B,KAAK,SACL0H,QAAS,WACPrB,EAAapF,IAEf/C,MAAKuD,OAAAG,EAAA,EAAAH,CAAA,GAAOyE,EAAmBF,IAE/BjI,EAAAC,EAAAC,cAACwJ,EAAD,CAAM5F,KAAK,qBAUvBsE,EAAQxB,aAAe,CACrBtF,IAAK,KACL+G,YAAY,EACZvE,KAAM,KACNZ,GAAI,KACJoF,aAAc,KACdC,YAAa,KACbC,aAAc,MAEDJ,SC9FTyB,GAAU,SAAA/J,GAAA,IACduC,EADcvC,EACduC,SACAyH,EAFchK,EAEdgK,iBACAC,EAHcjK,EAGdiK,iBACAC,EAJclK,EAIdkK,iBACAC,EALcnK,EAKdmK,aALc,OAOdjK,EAAAC,EAAAC,cAAA,WACGmC,EAASkF,IAAI,SAAA2C,GAAE,OACdlK,EAAAC,EAAAC,cAACiK,GAADzG,OAAA+D,OAAA,GACMyC,EADN,CAEE7B,WAAY4B,GAAgBA,EAAa/G,KAAOgH,EAAGhH,GACnDoF,aAAcwB,EACdvB,YAAawB,EACbvB,aAAcwB,SAgBtBH,GAAQjD,aAAe,CACrBkD,iBAAkB,KAClBC,iBAAkB,KAClBC,iBAAkB,KAClBC,aAAc,MAEDJ,UCxBTO,GAAW,SAAChE,GAAU,IAExB6D,EAUE7D,EAVF6D,aACAI,EASEjE,EATFiE,uBACAC,EAQElE,EARFkE,iBACAC,EAOEnE,EAPFmE,iBACAhI,EAME6D,EANF7D,QACAiI,EAKEpE,EALFoE,cACAnI,EAIE+D,EAJF/D,SACAoI,EAGErE,EAHFqE,oBACAC,EAEEtE,EAFFsE,oBACAjI,EACE2D,EADF3D,aAXwBgG,EAcIC,mBAAS,IAdbC,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAA+E,EAAA,GAcnBpH,EAdmBsH,EAAA,GAcVgC,EAdUhC,EAAA,GAuC1B,OAxBAiC,oBAAU,WACJX,GACFM,EAAiBN,EAAa3I,MAE/B,CAAC2I,IAqBFjK,EAAAC,EAAAC,cAAC2K,EAAD,KACE7K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACGmC,GACCrC,EAAAC,EAAAC,cAAC4K,GAAD,CACEb,aAAcA,EACdH,iBAAkBW,EAClBT,iBAAkBU,EAClBX,iBA3BZ,SAA0B/H,GACpBA,IAAUiI,EAAa/G,IAG3BmH,EAAuBrI,IAwBbK,SAAUA,KAIhBrC,EAAAC,EAAAC,cAAA,0BAEGuC,GAEHzC,EAAAC,EAAAC,cAAA,SAAO+B,KAAK,OAAOtB,MAAOU,EAASkI,SA7BzC,SAA6BC,GAAK,IAEpB7I,EACR6I,EADFC,OAAU9I,MAEZgK,EAAWhK,IAyB2DoK,YAAY,aAC9E/K,EAAAC,EAAAC,cAAA,UAAQ+B,KAAK,SAAS0H,QAvB5B,WACEW,EAAiBjJ,KAsBb,aAIFrB,EAAAC,EAAAC,cAAA,WAAMsK,EAAgBxK,EAAAC,EAAAC,cAAA,yBAAwBqC,GAAWvC,EAAAC,EAAAC,cAAC8K,EAAazI,MAoD7E6H,GAASxD,aAAe,CACtBqD,aAAc,KACdI,uBAAwB,KACxBC,iBAAkB,KAClBC,iBAAkB,KAClBhI,QAAS,KACTiI,cAAe,MAGjB,IAAMS,GAAYC,YAxDM,SAAApL,GAAA,IACtByC,EADsBzC,EACtByC,QAASF,EADavC,EACbuC,SADa,MAEjB,CACLE,UACAE,aAJsB3C,EACH2C,aAInBJ,WACA4H,aANsBnK,EACWmK,aAMjCO,cAPsB1K,EACyB0K,gBAStB,SAAArG,GAAQ,MAAK,CACtCmG,iBAAkB,SAACpG,GACjBC,EAASF,EAAqBC,KAEhCmG,uBAAwB,SAACrI,GACvBmC,EdhD4B,SAAAnC,GAAK,OAAID,EAAcC,GcgD1CmJ,CAAiBnJ,KAE5BoJ,eAAgB,SAAC3I,GACf0B,EAAS3B,EAAgBC,KAE3B4I,qBAAsB,WACpBlH,Ed/CsC,CAAElC,KCzDP,2Ba0GnCwI,oBAAqB,SAACzI,GACpBmC,EAASzB,EAAcV,KAEzB0I,oBAAqB,SAAC1I,EAAOqB,GAC3Bc,EAASf,EAAcpB,EAAOqB,KAEhCkH,iBAAkB,SAACrG,Gd3CI,IAAA7C,Ec4CrB8C,Gd5CqB9C,Ec4CF6C,Ed5Ca,SAACC,GACnCA,EAASjC,GAAoB,IAC7Bd,EAAUC,GACP+C,KAAK,SAACvC,GACLsC,EAASjC,GAAoB,IAC7BiC,EAAS7B,EAAcT,MAExB8C,MAAM,SAAC/C,GAEN,OADAuC,EAASjC,GAAoB,IACtBiC,EAAS3B,EAAgBZ,Yc6DpBsJ,CAGhBd,wCC9II/H,GbE2BtB,EAFZ,aAEqC,GaA3CuK,GAAA,CACb/I,QAAS,KACTF,YACA4H,aAAc5H,GAAS,GACvBI,aAAc,GACd+H,eAAe,GC8DFe,GAnBC,WAAkC,IAAjCC,EAAiCC,UAAA3I,OAAA,QAAA4I,IAAAD,UAAA,GAAAA,UAAA,GAAzBH,GAAcK,EAAWF,UAAA3I,OAAA,EAAA2I,UAAA,QAAAC,EAChD,OAAQC,EAAO1J,MACb,IfjD+B,sBekD7B,OAhBmB,SAACuJ,EAAOG,GAAW,IAClC3J,EAAU2J,EAAV3J,MACAK,EAAamJ,EAAbnJ,SACFuJ,EAAgBvJ,EAASmB,UAAU,SAAA0G,GAAE,OAAIA,EAAGhH,KAAOlB,IACzD,OAAO0B,OAAO+D,OAAO,GAAI+D,EAAO,CAC9BvB,aAAc5H,EAASuJ,KAWdT,CAAiBK,EAAOG,GACjC,IfxD2B,kBeyDzB,OA1BgB,SAACH,EAAOG,GAAW,IAC/BpJ,EAAYoJ,EAAZpJ,QACR,OAAOmB,OAAO+D,OAAO,GAAI+D,EAAO,CAC9BjJ,UACAE,aAAc,KAsBLH,CAAckJ,EAAOG,GAC9B,IfzD6B,oBe0D3B,OAjDkB,SAACH,EAAOG,GAAW,IACjClJ,EAAiBkJ,EAAjBlJ,aACAF,EAAYiJ,EAAZjJ,QACR,OAAOmB,OAAO+D,OAAO,GAAI+D,EAAO,CAC9B/I,eACAF,QAASE,GAAwC,IAAxBA,EAAaK,OAAe,KAAOP,IA4CnDsJ,CAAgBL,EAAOG,GAChC,If1DiC,wBe2D/B,OA1CsB,SAAAH,GAAK,OAAI9H,OAAO+D,OAAO,GAAI+D,EAAO,CAC5D/I,aAAc,KAyCHqJ,CAAoBN,GAC7B,If1D4B,mBe2D1B,OAfiB,SAACA,EAAOG,GAAR,OAAmBjI,OAAO+D,OAAO,GAAI+D,EAAO,CACjEnJ,SAAUsJ,EAAOtJ,WAcN0J,CAAeP,EAAOG,GAC/B,If1DkC,yBe2DhC,OA1CkB,SAACH,EAAOG,GAAW,IACjCxJ,EAAcwJ,EAAdxJ,UACAqI,EAAkBgB,EAAlBhB,cACR,OAAO9G,OAAO+D,OAAO,GAAI+D,EAAO,CAC9BhB,mBAA6BkB,IAAdvJ,GAA2BqI,EAAgBrI,IAsCjD6J,CAAgBR,EAAOG,GAChC,QACE,OAAOH,IC7DPS,GCAS,SAACC,GACd,IAAMC,EAAc,CAACC,MAMrB,IAAMC,EAAqBC,mBAAeC,WAAf,EAAmBJ,GACxCK,EAAoBC,+BAAoBJ,GAI9C,OAFcK,uBAAYnB,GAASW,EAAgBM,GDVvCG,GAYCC,OAVf,WACE,OACE5M,EAAAC,EAAAC,cAAA,OAAK2H,UAAU,OACb7H,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAUZ,MAAOA,IACfjM,EAAAC,EAAAC,cAAC+K,GAAD,SECY6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECZNC,IAASC,OAAOpN,EAAAC,EAAAC,cAACmN,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtJ,KAAK,SAAAuJ,GACjCA,EAAaC","file":"static/js/main.10e4c5ab.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst wrapperStyle = {\n  background: 'rebeccapurple',\n  marginBottom: '1em',\n  padding: '1em .5em',\n};\n\nconst headerStyle = {\n  margin: 0,\n  color: 'white',\n  textDecoration: 'none',\n  textAlign: 'left',\n};\n\nconst Header = ({ siteTitle }) => (\n  <div style={wrapperStyle}>\n    <h1 style={headerStyle}>{siteTitle}</h1>\n  </div>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export default {\n  siteMetadata: {\n    title: 'RSS Dashboard',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './header';\nimport config from '../config';\n\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header siteTitle={config.siteMetadata.title} />\n    <div style={{ padding: '5em' }}>{children}</div>\n  </div>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Layout;\n","export const setItem = ({ key, value }) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const getItem = (key) => {\n  const item = localStorage.getItem(key);\n  return JSON.parse(item);\n};\n\nexport const deleteItem = key => localStorage.deleteItem(key);\n","import RSSParser from 'rss-parser';\nimport {\n  SELECT_RSS_FEED_TAG,\n  ADD_ERROR_MESSAGE,\n  DISMISS_ERROR_MESSAGE,\n  SELECT_RSS_FEED,\n  UPDATE_RSS_FEEDS,\n  TOGGLE_IS_LOADING_FEED,\n} from './actionTypes';\n\nimport {\n  saveRssFeed,\n  deleteRssFeed,\n  updateRssFeed,\n} from '../services/rssFeedStorageSrv';\n\nconst rssParser = new RSSParser();\n\nconst parseFeed = (feedUrl) => {\n  let url = feedUrl;\n  // Add proxy when working in development to resolve CORS issues\n  if (process.env.NODE_ENV !== 'development') {\n    const CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n    url = `${CORS_PROXY}${feedUrl}`;\n  }\n\n  return new Promise((resolve, reject) => rssParser.parseURL(url, (error, feed) => {\n    if (error) {\n      const message = error.message || 'Unexpected error occurred';\n      return reject(message);\n    }\n    return resolve(feed);\n  }));\n};\n\nconst generateTagFeed = (title, urlLink) => ({\n  id: new Date().getTime(),\n  url: urlLink,\n  name: title || urlLink,\n});\n\nconst selectFeedTag = tagId => ({ type: SELECT_RSS_FEED_TAG, tagId });\n\nconst toggleIsLoadingFeed = isLoading => ({\n  type: TOGGLE_IS_LOADING_FEED,\n  isLoading,\n});\n\nconst updateRssFeeds = feedTags => ({ type: UPDATE_RSS_FEEDS, feedTags });\n\nexport const selectRssFeed = rssFeed => ({ type: SELECT_RSS_FEED, rssFeed });\n\nexport const selectRssFeedTag = tagId => selectFeedTag(tagId);\n\nexport const addErrorMessgae = errorMessage => ({\n  type: ADD_ERROR_MESSAGE,\n  errorMessage,\n});\n\nexport const dismissErrorMessage = () => ({ type: DISMISS_ERROR_MESSAGE });\n\nexport const deleteFeedTag = (tagId) => {\n  const remainingTags = deleteRssFeed(tagId);\n  return updateRssFeeds(remainingTags);\n};\n\nexport const updateFeedTag = (tagId, newName) => {\n  const remainingTags = updateRssFeed({ tagId, newName });\n  return updateRssFeeds(remainingTags);\n};\n\nexport const fetchFeed = feedUrl => (dispatch) => {\n  dispatch(toggleIsLoadingFeed(true));\n  parseFeed(feedUrl)\n    .then((feed) => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(selectRssFeed(feed));\n    })\n    .catch((error) => {\n      dispatch(toggleIsLoadingFeed(false));\n      return dispatch(addErrorMessgae(error));\n    });\n};\n\nexport const addNewRssFeedDetails = urlLink => (dispatch) => {\n  dispatch(toggleIsLoadingFeed(true));\n  parseFeed(urlLink)\n    .then((feed) => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(selectRssFeed(feed));\n      const feedTag = generateTagFeed(feed.title, urlLink);\n      const feedTags = saveRssFeed(feedTag);\n      dispatch(updateRssFeeds(feedTags));\n      return dispatch(selectFeedTag(feedTag.id));\n    })\n    .catch((error) => {\n      dispatch(toggleIsLoadingFeed(false));\n      dispatch(addErrorMessgae(error));\n    });\n};\n","export const SELECT_RSS_FEED = 'SELECT_RSS_FEED';\nexport const ADD_ERROR_MESSAGE = 'ADD_ERROR_MESSAGE';\nexport const DISMISS_ERROR_MESSAGE = 'DISMISS_ERROR_MESSAGE';\nexport const ADD_NEW_RSS_FEED_DETAILS = 'ADD_NEW_RSS_FEED_DETAILS';\nexport const UPDATE_RSS_FEEDS = 'UPDATE_RSS_FEEDS';\nexport const SELECT_RSS_FEED_TAG = 'SELECT_RSS_FEED_TAG';\nexport const TOGGLE_IS_LOADING_FEED = 'TOGGLE_IS_LOADING_FEED';\n","import { getItem, setItem } from './localStorageSrv';\n\nconst RSS_FEED_KEY = 'rssFeeds';\n\nexport const getRssFeeds = () => getItem(RSS_FEED_KEY) || [];\n\nexport const saveRssFeed = ({ id, name, url }) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  currFeeds.push({ id, name, url });\n  setItem({ key: RSS_FEED_KEY, value: currFeeds });\n  return currFeeds;\n};\n\nexport const deleteRssFeed = (feedId) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  if (currFeeds.length > 0) {\n    const updatedFeeds = currFeeds.filter(f => f.id !== feedId);\n    setItem({ key: RSS_FEED_KEY, value: updatedFeeds });\n    return updatedFeeds;\n  }\n  return currFeeds;\n};\n\nexport const updateRssFeed = ({ tagId, newName }) => {\n  const currFeeds = getItem(RSS_FEED_KEY) || [];\n  const feedIndex = currFeeds.findIndex(f => f.id === tagId);\n\n  if (feedIndex > -1) {\n    const feeds = [...currFeeds];\n    const newFeedDetails = {\n      ...feeds[feedIndex],\n      name: newName,\n    };\n    feeds.splice(feedIndex, 1, newFeedDetails);\n    setItem({ key: RSS_FEED_KEY, value: feeds });\n    return feeds;\n  }\n  return currFeeds;\n};\n","import PropTypes from 'prop-types';\n\nexport default {\n  url: PropTypes.string,\n  isSelected: PropTypes.bool,\n  name: PropTypes.string,\n  id: PropTypes.number,\n  onFeedDelete: PropTypes.func,\n  onFeedClick: PropTypes.func,\n  onFeedUpdate: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst authorStyle = {\n  margin: '0 .5em 0 0',\n  display: 'inline-block',\n  fontWeight: 'normal',\n};\n\nconst Author = ({ author }) => <h4 style={authorStyle}>{author}</h4>;\n\nAuthor.propTypes = {\n  author: PropTypes.string.isRequired,\n};\nexport default Author;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst datePublishedStyle = {\n  margin: 0,\n  display: 'inline-block',\n  fontSize: 12,\n};\n\nconst PublishDate = ({ pubDate }) => (\n  <p style={datePublishedStyle}>\n    {`${new Date(pubDate).toLocaleDateString()}`}\n  </p>\n);\n\nPublishDate.propTypes = {\n  pubDate: PropTypes.string.isRequired,\n};\nexport default PublishDate;\n","import React from 'react';\n\n// Components\nimport Author from './author';\nimport PublishDate from './publishDate';\n\n// Types\nimport FeedItemType from '../../types/feedItem';\n\nconst titleStyle = {\n  fontSize: 18,\n  fontWeight: 'bold',\n  textDecoration: 'none',\n  color: '#000000a6',\n};\n\nconst wrapperStyle = {\n  border: '1px solid #ebedf0',\n  borderRight: 0,\n  borderLeft: 0,\n  borderTop: 0,\n  padding: '15px',\n  color: '#000000a6',\n};\nconst htmlContentStyle = { margin: '1em 0', fontSize: 12 };\n\nconst authorStyle = {\n  margin: 0,\n};\n\nconst FeedItem = (props) => {\n  const {\n    link, title, pubDate, author, content,\n  } = props;\n  return (\n    <div style={wrapperStyle}>\n      <a style={titleStyle} href={link}>\n        {title}\n      </a>\n      <div style={authorStyle}>\n        {author && <Author author={author} />}\n        {pubDate && <PublishDate pubDate={pubDate} />}\n      </div>\n      <div style={htmlContentStyle} dangerouslySetInnerHTML={{ __html: content }} />\n    </div>\n  );\n};\n\nFeedItem.propTypes = FeedItemType;\n\nFeedItem.defaultProps = {\n  link: '',\n  content: '',\n  author: null,\n  pubDate: null,\n};\n\nexport default FeedItem;\n","import PropTypes from 'prop-types';\n\nexport default {\n  link: PropTypes.string,\n  content: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  pubDate: PropTypes.string,\n  author: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n","import FeedItem from './feedItem';\n\nexport default FeedItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst titleStyle = {\n  border: '1px solid #ebedf0',\n  borderTop: 0,\n  borderRight: 0,\n  borderLeft: 0,\n};\n\nconst FeedTitle = ({ title }) => (\n  <div style={titleStyle}>\n    <h2>{title}</h2>\n  </div>\n);\n\nFeedTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default FeedTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedItem from './FeedItem';\nimport FeedTitle from './feedTitle';\nimport FeedItemType from '../types/feedItem';\n\nconst listStyle = {\n  border: '1px solid #ebedf0',\n  borderRadius: 2,\n  width: '100%',\n  position: 'relative',\n  padding: '20px',\n};\n\nconst noItemsMsgStyle = {};\nconst FeedList = ({ items, ...props }) => (\n  <div style={listStyle}>\n    <FeedTitle {...props} />\n    {items.length === 0 ? (\n      <div style={noItemsMsgStyle}>No Items found</div>\n    ) : (\n      items.map(item => <FeedItem key={item.title} {...item} />)\n    )}\n  </div>\n);\n\nFeedList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(FeedItemType)).isRequired,\n};\n\nexport default FeedList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = (props) => {\n  const {\n    name, size, spin, className,\n  } = props;\n  return (\n    <i\n      {...props}\n      className={`fa fa-${name} fa-${size} ${\n        spin ? 'fa-spin' : ''\n      } ${className}`}\n    />\n  );\n};\n\nIcon.defaultName = 'Icon';\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  spin: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  spin: false,\n  size: '1x',\n  className: '',\n};\n\nexport default Icon;\n","import React, { useState } from 'react';\nimport Icon from './icon';\nimport FeedTagType from '../types/feedTag';\n\nconst nameStyle = {\n  marginRight: '.3em',\n};\n\nconst btnCleanStyle = {\n  background: 'transparent',\n  border: 0,\n  color: 'white',\n  boxShadow: '0 0 0 0',\n  padding: 0,\n};\n\nconst deleteBtnStyle = {};\n\nconst FeedTag = (props) => {\n  const {\n    url, isSelected, name, id, onFeedDelete, onFeedClick, onFeedUpdate,\n  } = props;\n\n  const [isEditMode, setEditMode] = useState(false);\n  const [tagName, setTagName] = useState(name);\n\n  const wrapperStyle = {\n    border: '1px solid #6e2a9e',\n    display: 'inline-block',\n    padding: '5px',\n    borderRadius: '30px',\n    background: `${isSelected ? '#9352ea' : '#6e2a9e'}`,\n    color: 'white',\n    fontSize: '14px',\n    cursor: 'pointer',\n  };\n\n  function toggleEditMode() {\n    setEditMode(!isEditMode);\n  }\n\n  function handleNameChange(evt) {\n    const {\n      target: { value },\n    } = evt;\n    setTagName(value);\n  }\n\n  function handleConfirmNameChange() {\n    if (tagName && tagName.length > 0 && tagName !== name) {\n      onFeedUpdate(id, tagName);\n    }\n    toggleEditMode();\n  }\n\n  return (\n    <div style={wrapperStyle} alt={url} id={id}>\n      {isEditMode && (\n        <React.Fragment>\n          <input type=\"text\" value={tagName} onChange={handleNameChange} style={nameStyle} />\n          <Icon name=\"check-circle\" onClick={handleConfirmNameChange} />\n        </React.Fragment>\n      )}\n      {!isEditMode && (\n        <div onDoubleClick={toggleEditMode}>\n          <span\n            type=\"button\"\n            onClick={() => {\n              onFeedClick(id);\n            }}\n            style={{ ...btnCleanStyle, ...nameStyle }}\n          >\n            {name}\n          </span>\n          <span\n            type=\"button\"\n            onClick={() => {\n              onFeedDelete(id);\n            }}\n            style={{ ...deleteBtnStyle, ...btnCleanStyle }}\n          >\n            <Icon name=\"times-circle\" />\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nFeedTag.propTypes = FeedTagType;\n\nFeedTag.defaultProps = {\n  url: null,\n  isSelected: false,\n  name: null,\n  id: null,\n  onFeedDelete: null,\n  onFeedClick: null,\n  onFeedUpdate: null,\n};\nexport default FeedTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport FeedTag from './feedTag';\n\nconst TagList = ({\n  feedTags,\n  handleDeleteFeed,\n  handleSelectFeed,\n  handleUpdateFeed,\n  selectedFeed,\n}) => (\n  <div>\n    {feedTags.map(ft => (\n      <FeedTag\n        {...ft}\n        isSelected={selectedFeed && selectedFeed.id === ft.id}\n        onFeedDelete={handleDeleteFeed}\n        onFeedClick={handleSelectFeed}\n        onFeedUpdate={handleUpdateFeed}\n      />\n    ))}\n  </div>\n);\n\nTagList.propTypes = {\n  feedTags: PropTypes.arrayOf(PropTypes.node).isRequired,\n  handleDeleteFeed: PropTypes.func,\n  handleSelectFeed: PropTypes.func,\n  handleUpdateFeed: PropTypes.func,\n  selectedFeed: PropTypes.shape({\n    id: PropTypes.number,\n  }),\n};\n\nTagList.defaultProps = {\n  handleDeleteFeed: null,\n  handleSelectFeed: null,\n  handleUpdateFeed: null,\n  selectedFeed: null,\n};\nexport default TagList;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Layout from '../components/layout';\nimport {\n  selectRssFeedTag,\n  addNewRssFeedDetails,\n  addErrorMessgae,\n  dismissErrorMessage,\n  deleteFeedTag,\n  updateFeedTag,\n  fetchFeed,\n} from '../state/actions';\nimport FeedTagType from '../types/feedTag';\n// Components\nimport FeedList from '../components/feedList';\nimport TagList from '../components/tagList';\n\nconst HomePage = (props) => {\n  const {\n    selectedFeed,\n    handleSelectRssFeedTag,\n    handleNewRssFeed,\n    handleGetRssFeed,\n    rssFeed,\n    isLoadingFeed,\n    feedTags,\n    handleDeleteFeedTag,\n    handleUpdateFeedTag,\n    errorMessage,\n  } = props;\n\n  const [feedUrl, setFeedUrl] = useState('');\n  useEffect(() => {\n    if (selectedFeed) {\n      handleGetRssFeed(selectedFeed.url);\n    }\n  }, [selectedFeed]);\n\n  function handleSelectFeed(tagId) {\n    if (tagId === selectedFeed.id) {\n      return;\n    }\n    handleSelectRssFeedTag(tagId);\n  }\n\n  function handleFeedUrlChange(evt) {\n    const {\n      target: { value },\n    } = evt;\n    setFeedUrl(value);\n  }\n\n  function handleAddRssFeed() {\n    handleNewRssFeed(feedUrl);\n  }\n\n  return (\n    <Layout>\n      <div>\n        <div>\n          {feedTags && (\n            <TagList\n              selectedFeed={selectedFeed}\n              handleDeleteFeed={handleDeleteFeedTag}\n              handleUpdateFeed={handleUpdateFeedTag}\n              handleSelectFeed={handleSelectFeed}\n              feedTags={feedTags}\n            />\n          )}\n        </div>\n        <p>\n          Error message:\n          {errorMessage}\n        </p>\n        <input type=\"text\" value={feedUrl} onChange={handleFeedUrlChange} placeholder=\"URL Link\" />\n        <button type=\"button\" onClick={handleAddRssFeed}>\n          Add Feed\n        </button>\n      </div>\n      <div>{isLoadingFeed ? <div>Loading...</div> : rssFeed && <FeedList {...rssFeed} />}</div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = ({\n  rssFeed, feedTags, errorMessage, selectedFeed, isLoadingFeed,\n}) => ({\n  rssFeed,\n  errorMessage,\n  feedTags,\n  selectedFeed,\n  isLoadingFeed,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleNewRssFeed: (urlLink) => {\n    dispatch(addNewRssFeedDetails(urlLink));\n  },\n  handleSelectRssFeedTag: (tagId) => {\n    dispatch(selectRssFeedTag(tagId));\n  },\n  handleErrorMsg: (errorMessage) => {\n    dispatch(addErrorMessgae(errorMessage));\n  },\n  handleRemoveErrorMsg: () => {\n    dispatch(dismissErrorMessage());\n  },\n  handleDeleteFeedTag: (tagId) => {\n    dispatch(deleteFeedTag(tagId));\n  },\n  handleUpdateFeedTag: (tagId, newName) => {\n    dispatch(updateFeedTag(tagId, newName));\n  },\n  handleGetRssFeed: (urlLink) => {\n    dispatch(fetchFeed(urlLink));\n  },\n});\n\nHomePage.propTypes = {\n  selectedFeed: PropTypes.node,\n  handleSelectRssFeedTag: PropTypes.func,\n  handleNewRssFeed: PropTypes.func,\n  handleGetRssFeed: PropTypes.func,\n  rssFeed: PropTypes.node,\n  isLoadingFeed: PropTypes.bool,\n  feedTags: PropTypes.arrayOf(PropTypes.shape(FeedTagType)),\n  handleDeleteFeedTag: PropTypes.func,\n  handleUpdateFeedTag: PropTypes.func,\n  errorMessage: PropTypes.string,\n};\n\nHomePage.defaultProps = {\n  selectedFeed: null,\n  handleSelectRssFeedTag: null,\n  handleNewRssFeed: null,\n  handleGetRssFeed: null,\n  rssFeed: null,\n  isLoadingFeed: null,\n};\n\nconst Connector = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HomePage);\n\nexport { Connector as default, HomePage };\n","import { getRssFeeds } from '../services/rssFeedStorageSrv';\n\nconst feedTags = getRssFeeds();\n\nexport default {\n  rssFeed: null,\n  feedTags,\n  selectedFeed: feedTags[0],\n  errorMessage: '',\n  isLoadingFeed: false,\n};\n","import {\n  SELECT_RSS_FEED,\n  ADD_ERROR_MESSAGE,\n  DISMISS_ERROR_MESSAGE,\n  UPDATE_RSS_FEEDS,\n  SELECT_RSS_FEED_TAG,\n  TOGGLE_IS_LOADING_FEED,\n} from './actionTypes';\nimport initialState from './initialState';\n\nconst addErrorMessage = (state, action) => {\n  const { errorMessage } = action;\n  const { rssFeed } = state;\n  return Object.assign({}, state, {\n    errorMessage,\n    rssFeed: errorMessage && errorMessage.length === 0 ? null : rssFeed,\n  });\n};\n\nconst dismissErrorMessage = state => Object.assign({}, state, {\n  errorMessage: '',\n});\n\nconst toggleIsLoading = (state, action) => {\n  const { isLoading } = action;\n  const { isLoadingFeed } = state;\n  return Object.assign({}, state, {\n    isLoadingFeed: isLoading === undefined ? !isLoadingFeed : isLoading,\n  });\n};\n\nconst selectRssFeed = (state, action) => {\n  const { rssFeed } = action;\n  return Object.assign({}, state, {\n    rssFeed,\n    errorMessage: '',\n  });\n};\n\nconst selectRssFeedTag = (state, action) => {\n  const { tagId } = action;\n  const { feedTags } = state;\n  const selectedIndex = feedTags.findIndex(ft => ft.id === tagId);\n  return Object.assign({}, state, {\n    selectedFeed: feedTags[selectedIndex],\n  });\n};\n\nconst updateFeedTags = (state, action) => Object.assign({}, state, {\n  feedTags: action.feedTags,\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RSS_FEED_TAG:\n      return selectRssFeedTag(state, action);\n    case SELECT_RSS_FEED:\n      return selectRssFeed(state, action);\n    case ADD_ERROR_MESSAGE:\n      return addErrorMessage(state, action);\n    case DISMISS_ERROR_MESSAGE:\n      return dismissErrorMessage(state);\n    case UPDATE_RSS_FEEDS:\n      return updateFeedTags(state, action);\n    case TOGGLE_IS_LOADING_FEED:\n      return toggleIsLoading(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Home from './pages/home';\nimport configureStore from './state/configureStore';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Home />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducer';\n\nexport default (preloadedState) => {\n  const middlewares = [thunkMiddleware];\n\n  if (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n  }\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(reducer, preloadedState, composedEnhancers);\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}